<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:https="http://www.mulesoft.org/schema/mule/https" xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:mule-xml="http://www.mulesoft.org/schema/mule/xml" xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf"
	xmlns:soap="http://www.mulesoft.org/schema/mule/soap" xmlns:management="http://www.mulesoft.org/schema/mule/management"
	xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp" xmlns:smtps="http://www.mulesoft.org/schema/mule/smtps"
	xmlns:client="http://www.mulesoft.org/schema/mule/client" xmlns:test="http://www.mulesoft.org/schema/mule/test"
	xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns:quartz="http://www.mulesoft.org/schema/mule/quartz"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.mulesoft.org/schema/mule/core 	http://www.mulesoft.org/schema/mule/core/current/mule.xsd
        http://www.mulesoft.org/schema/mule/file 	http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
        http://www.mulesoft.org/schema/mule/vm 		http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
        http://www.mulesoft.org/schema/mule/json 	http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
        http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
        http://www.mulesoft.org/schema/mule/xml 	http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.mulesoft.org/schema/mule/cxf 	http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
        http://www.mulesoft.org/schema/mule/soap 	http://www.mulesoft.org/schema/mule/soap/current/mule-soap.xsd
        http://www.mulesoft.org/schema/mule/management http://www.mulesoft.org/schema/mule/management/current/mule-management.xsd
        http://www.mulesoft.org/schema/mule/smtp 	http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
        http://www.mulesoft.org/schema/mule/smtps 	http://www.mulesoft.org/schema/mule/smtps/current/mule-smtps.xsd
        http://www.mulesoft.org/schema/mule/client 	http://www.mulesoft.org/schema/mule/client/current/mule-client.xsd
        http://www.mulesoft.org/schema/mule/http 	http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
        http://www.mulesoft.org/schema/mule/https 	http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd
        http://www.mulesoft.org/schema/mule/test 	http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
        http://www.mulesoft.org/schema/mule/jms 	http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
        http://www.mulesoft.org/schema/mule/quartz http://www.mulesoft.org/schema/mule/quartz/current/mule-quartz.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        ">

	<configuration>
		<default-threading-profile maxThreadsActive="32"
			maxThreadsIdle="16" poolExhaustedAction="RUN" />
	</configuration>

	<context:property-placeholder
		location="classpath:iasion.properties,classpath:iasion-override.properties"
		ignore-resource-not-found="true" />

	<!-- ############################################################# -->
	<!-- Import Spring sur fichier de description des beans de service -->
	<!-- ############################################################# -->
	<spring:beans>
		<spring:import resource="classpath:mule-appctx.xml" />
	</spring:beans>

	<!-- ######################################################################################## -->
	<!-- Connecteur HTTP pour le multipart (bug dans la version mule conmunautaire) -->
	<!-- ######################################################################################## -->
	<!-- <http:connector name="httpCookies" enableCookies="true" /> -->
	<http:connector name="MultiPartHttpConnector"
		enableCookies="true" reuseAddress="true">
		<service-overrides
			messageFactory="orufeo.iasion.http.HttpMultipartMuleMessageFactory" />
	</http:connector>


	<!-- ######################################################################################## -->
	<!-- Remote Dispatcher pour accès aux flows via un agent programmatic en 
		remonte (NOT USED) -->
	<!-- ######################################################################################## 
		<client:remote-dispatcher-agent> <client:remote-endpoint connector-ref="MultiPartHttpConnector" 
		address="http://localhost:${serverPortMailClient}" /> </client:remote-dispatcher-agent> -->

	<!-- ######################################################################################## -->
	<!-- Endpoint Smtp -->
	<!-- ######################################################################################## -->
	<!-- <vm:endpoint name="ToSmtpEndpoint" path="tosmtp" /> -->

	<!-- ######################################################################################## -->
	<!-- Connecteur HTTPS pour amano avec l'import des certificats certifiés 
		pour accès aux services HTTPS -->
	<!-- ######################################################################################## -->
	<https:connector name="IasionHttpsConnector">
		<!-- <https:tls-client path="keystore.jks" storePassword="toto42" /> -->
		<!-- <https:tls-server path="keystore.jks" storePassword="toto42" /> -->
	</https:connector>

	<!-- ######################################################################################## -->
	<!-- Connecteur SMTPS pour l'envoi de mail avec l'import des certificats 
		certifiés pour accès aux services HTTPS (keystore en commun) -->
	<!-- ######################################################################################## -->
	<smtps:connector name="smtpsConnector">
		<smtps:tls-client path="keystore.jks" storePassword="toto42" />
		<smtps:tls-trust-store path="keystore.jks"
			storePassword="toto42" />
	</smtps:connector>

	<smtp:gmail-connector name="gmailOrufeo-io"
		contentType="text/plain" fromAddress="noreply@orufeo.io"
		replyToAddresses="noreply@orufeo.io" />




	<!-- ###################################################################### -->
	<!-- ################# TEST FLOW ################ -->
	<!-- ###################################################################### -->
	<!-- ###################################################################### -->

	<!--<flow name="test">

		<description></description>
		<http:inbound-endpoint host="${serverHost}"
			connector-ref="MultiPartHttpConnector" port="${serverPort}" path="test"
			exchange-pattern="request-response">

			<response>
				<json:object-to-json-transformer
					mimeType="application/json" mapper-ref="jacksonObjectMapper" />
				<custom-transformer
					class="orufeo.iasion.transformer.Json2JsonPTransformer" />
			</response>

		</http:inbound-endpoint>

		<http:body-to-parameter-map-transformer />

		<pooled-component>
			<property-entry-point-resolver
				property="http.relative.path" />
			<spring-object bean="testSRV" />
		</pooled-component>

	</flow>-->


	<!-- ###################################################################### -->
	<!-- ################# COOKIE REJECTION FLOW ################ -->
	<!-- ###################################################################### -->
	<!-- ###################################################################### -->


	<flow name="CookieRejectionFlow">
		<custom-transformer
			class="orufeo.iasion.transformer.CookieRejectionToFrontTransformer">

		</custom-transformer>
	</flow>



	<!-- ###################################################################### -->
	<!-- ################# AUTHENTICATION FLOW ################ -->
	<!-- ###################################################################### -->
	<!-- ###################################################################### -->

	<flow name="authentication">
		<description></description>
		<http:inbound-endpoint host="${serverHost}"
			connector-ref="MultiPartHttpConnector" port="${serverPort}" path="authentication"
			exchange-pattern="request-response">
			<message-filter onUnaccepted="CookieRejectionFlow"
				throwOnUnaccepted="false">
				<custom-filter name="cfiasion"
					class="orufeo.iasion.filter.CookieFilter">
					<spring:property name="userAccountBo" ref="userAccountBO" />
					<spring:property name="security" value="${iasion.security}" />
					<spring:property name="objectMapper" ref="jacksonObjectMapper" />
				</custom-filter>
			</message-filter>
			<response>
				<json:object-to-json-transformer
					mimeType="application/json" mapper-ref="jacksonObjectMapper" />
				<custom-transformer
					class="orufeo.iasion.transformer.Json2JsonPTransformer" />
			</response>
		</http:inbound-endpoint>

		<!-- <logger level="INFO" message="#### cookies #### : #[message.inboundProperties['cookies']]" 
			/> -->
		<!-- <logger level="INFO" message="#### PATH #### : #[message.inboundProperties['http.relative.path']]" 
			/> -->

		<http:body-to-parameter-map-transformer />

		<set-variable variableName="path"
			value="#[message.inboundProperties['http.relative.path']]" />

		<pooled-component>
			<property-entry-point-resolver
				property="http.relative.path" />
			<spring-object bean="authenticationSRV" />
		</pooled-component>
		<choice>
			<when expression="#[(path contains 'resetInit') and (payload is null)]">
				<!-- <logger level="INFO" message="resetInit error, send back code 555"
					/> -->
				<expression-transformer
					expression="#[message.payload='{ \u0022status\u0022: \u0022KO\u0022, \u0022code\u0022: 555, \u0022reason\u0022:\u0022Invalid\u0022 }' ]" />
			</when>

			<when expression="#[(path contains 'resetPassword') and (payload is null)]">
				<!-- <logger level="INFO" message="resetPassword error, send back code
					555" /> -->
				<expression-transformer
					expression="#[message.payload='{ \u0022status\u0022: \u0022KO\u0022, \u0022code\u0022: 555, \u0022reason\u0022:\u0022Invalid checksum\u0022 }']" />
			</when>


			<otherwise>
				<logger level="DEBUG" message="OtherCase" />
			</otherwise>

		</choice>

	</flow>



</mule>
